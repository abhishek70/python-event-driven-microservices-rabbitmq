version: '3.7'
services:
  rabbitmq:
    image: rabbitmq:3.8-management
    container_name: rabbitmq
    expose:
      - 5672
      - 15672
    ports:
      - 5672:5672
      - 15672:15672
  cms-queue:
    build: ./cms/app
    container_name: cms-queue
    command: ["/usr/src/app/wait-for-rabbitmq.sh", "rabbitmq", "python", "consumer.py"]
    restart: on-failure
    env_file:
      - ./cms/.env.dev
    depends_on:
      - rabbitmq
      - cms-db
  order-queue:
    build: ./order-service
    container_name: order-service-queue
    command: ["/usr/src/app/wait-for-rabbitmq.sh", "rabbitmq", "python", "consumer.py"]
    restart: on-failure
    env_file:
      - ./order-service/.env.dev
    depends_on:
      - rabbitmq
      - order-db
  cms-db:
    image: mysql:5.7
    container_name: cms-db
    volumes:
      - ./cms-db:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cms
      MYSQL_USER: dev
      MYSQL_PASSWORD: dev
    expose:
      - "3307"
    ports:
      - "3307:3306"
  cms-web:
    build: ./cms/app
    container_name: cms-web
    restart: on-failure
    command: python manage.py runserver 0.0.0.0:8080
    volumes:
      - ./cms/app/:/usr/src/app/
    ports:
      - 8000:8080
    env_file:
      - ./cms/.env.dev
    depends_on:
      - rabbitmq
      - cms-db
  order-db:
    image: mysql:5.7
    container_name: order-db
    volumes:
      - ./order-db:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: order
      MYSQL_USER: dev
      MYSQL_PASSWORD: dev
    expose:
      - "3309"
    ports:
      - "3309:3306"
  order:
    build: ./order-service
    container_name: order-service
    restart: on-failure
    command: python manage.py run -h 0.0.0.0
    volumes:
      - ./order-service/:/usr/src/app/
    ports:
      - 8001:5000
    env_file:
      - ./order-service/.env.dev
    depends_on:
      - rabbitmq
      - order-db

